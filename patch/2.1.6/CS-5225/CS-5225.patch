Index: eXoApplication/mail/webapp/src/main/java/org/exoplatform/mail/webui/popup/UIAddressForm.java
===================================================================
--- eXoApplication/mail/webapp/src/main/java/org/exoplatform/mail/webui/popup/UIAddressForm.java	(revision 71937)
+++ eXoApplication/mail/webapp/src/main/java/org/exoplatform/mail/webui/popup/UIAddressForm.java	(working copy)
@@ -179,7 +179,7 @@
 
     OrganizationService organizationService = (OrganizationService) PortalContainer.getComponent(OrganizationService.class);
 
-    List<String> publicAddressBookIdsOfUser = contactSrv.getPublicAddressBookIdsOfUser(username);
+    List<String> publicAddressBookIdsOfUser = contactSrv.getPublicAddressBookIdsOfUser(null);
     if (!publicAddressBookIdsOfUser.isEmpty()) {
       SelectOptionGroup publicContacts = new SelectOptionGroup(publicContact);
       for (String publicCg : publicAddressBookIdsOfUser) {
@@ -194,7 +194,7 @@
       options.add(publicContacts);
     }
 
-    List<String> publicAddressBookIds = contactSrv.getAllsPublicAddressBookIds(username);
+    List<String> publicAddressBookIds = contactSrv.getAllsPublicAddressBookIds(null);
     publicAddressBookIds.removeAll(publicAddressBookIdsOfUser);
     if (!publicAddressBookIds.isEmpty()) {
       SelectOptionGroup publicContacts = new SelectOptionGroup("public-groups-contacts");
Index: eXoApplication/calendar/webapp/src/main/java/org/exoplatform/calendar/webui/popup/UIAddressForm.java
===================================================================
--- eXoApplication/calendar/webapp/src/main/java/org/exoplatform/calendar/webui/popup/UIAddressForm.java	(revision 71937)
+++ eXoApplication/calendar/webapp/src/main/java/org/exoplatform/calendar/webui/popup/UIAddressForm.java	(working copy)
@@ -97,7 +97,7 @@
       options.add(new SelectItemOption<String>(name + sa.getName(), sa.getId())) ;
     }
     
-    List<String> publicAddressBookIds = contactService.getAllsPublicAddressBookIds(CalendarUtils.getCurrentUser());
+    List<String> publicAddressBookIds = contactService.getAllsPublicAddressBookIds(null);
     if (!publicAddressBookIds.isEmpty()) {
       for (String publicCg : publicAddressBookIds) {
         options.add(new SelectItemOption<String>(CalendarUtils.getOrganizationService()
Index: eXoApplication/contact/service/src/main/java/org/exoplatform/contact/service/ContactService.java
===================================================================
--- eXoApplication/contact/service/src/main/java/org/exoplatform/contact/service/ContactService.java	(revision 71937)
+++ eXoApplication/contact/service/src/main/java/org/exoplatform/contact/service/ContactService.java	(working copy)
@@ -455,7 +455,7 @@
   
   /**
    * use this method to look all public AddressBookIds corresponding to groups in which the user has at least one membership.
-   * @param user The username of the user
+   * @param user The username of the user. If user parameter is null, the current user is implied.
    * @return A collection of the found AddressBookIds. The return collection cannot be null, but it can be empty if no AddressBookId is found.
    */
   public List<String> getPublicAddressBookIdsOfUser(String user) throws Exception;
@@ -463,7 +463,7 @@
   /**
    * Use this method to get all public AddressBookIds corresponding to groups that the user has the permission to view (including groups
    * in which the user has at least one membership).
-   * @param user The username of the user
+   * @param user The username of the user. If user parameter is null, the current user is implied.
    * @return
    */
   public List<String> getAllsPublicAddressBookIds(String user) throws Exception;
Index: eXoApplication/contact/service/src/main/java/org/exoplatform/contact/service/impl/ContactServiceImpl.java
===================================================================
--- eXoApplication/contact/service/src/main/java/org/exoplatform/contact/service/impl/ContactServiceImpl.java	(revision 71937)
+++ eXoApplication/contact/service/src/main/java/org/exoplatform/contact/service/impl/ContactServiceImpl.java	(working copy)
@@ -46,6 +46,8 @@
 import org.exoplatform.services.organization.OrganizationService;
 import org.exoplatform.services.organization.User;
 import org.exoplatform.services.organization.UserProfile;
+import org.exoplatform.services.security.ConversationState;
+import org.exoplatform.services.security.Identity;
 
 /**
  * Created by The eXo Platform SARL
@@ -114,12 +116,17 @@
 
 
   public List<String> getPublicAddressBookIdsOfUser(String user) throws Exception {
-    OrganizationService organizationService = 
-      (OrganizationService)ExoContainerContext.getCurrentContainer().getComponentInstanceOfType(OrganizationService.class) ;
-    Object[] objGroupIds = organizationService.getGroupHandler().findGroupsOfUser(user).toArray() ;
-    List<String> groupIds = new ArrayList<String>() ;
-    for (Object object : objGroupIds) {
-      groupIds.add(((Group)object).getId()) ;
+    List<String> groupIds;
+    if (user == null) {
+      Identity identity = ConversationState.getCurrent().getIdentity();
+      groupIds = new ArrayList<String>(identity.getGroups());
+    } else {
+      OrganizationService organizationService = (OrganizationService) ExoContainerContext.getCurrentContainer().getComponentInstanceOfType(OrganizationService.class);
+      Object[] objGroupIds = organizationService.getGroupHandler().findGroupsOfUser(user).toArray();
+      groupIds = new ArrayList<String>();
+      for (Object object : objGroupIds) {
+        groupIds.add(((Group) object).getId());
+      }
     }
     groupIds = excludeWildCardMatchs(groupIds, nonPublicGroups);
     return groupIds ;
Index: eXoApplication/contact/webapp/src/main/java/org/exoplatform/contact/webui/UIAddressBooks.java
===================================================================
--- eXoApplication/contact/webapp/src/main/java/org/exoplatform/contact/webui/UIAddressBooks.java	(revision 71937)
+++ eXoApplication/contact/webapp/src/main/java/org/exoplatform/contact/webui/UIAddressBooks.java	(working copy)
@@ -142,11 +142,11 @@
   }
   
   public List<String> getGroupsOfUser() throws Exception {
-    return ContactUtils.getContactService().getPublicAddressBookIdsOfUser(ContactUtils.getCurrentUser()) ;
+    return ContactUtils.getContactService().getPublicAddressBookIdsOfUser(null) ;
   }
   
   public List<String> getPublicContactGroups() throws Exception {
-    List<String> publicAddressBookIds = ContactUtils.getContactService().getAllsPublicAddressBookIds(ContactUtils.getCurrentUser()) ;
+    List<String> publicAddressBookIds = ContactUtils.getContactService().getAllsPublicAddressBookIds(null) ;
     publicAddressBookIds.removeAll(getGroupsOfUser());
     return publicAddressBookIds;
   }
Index: eXoApplication/contact/webapp/src/main/java/org/exoplatform/contact/webui/popup/UIAddressForm.java
===================================================================
--- eXoApplication/contact/webapp/src/main/java/org/exoplatform/contact/webui/popup/UIAddressForm.java	(revision 71937)
+++ eXoApplication/contact/webapp/src/main/java/org/exoplatform/contact/webui/popup/UIAddressForm.java	(working copy)
@@ -129,7 +129,7 @@
     
     OrganizationService organizationService = (OrganizationService) PortalContainer.getComponent(OrganizationService.class);
     
-    List<String> publicAddressBookIdsOfUser = contactSrv.getPublicAddressBookIdsOfUser(username);
+    List<String> publicAddressBookIdsOfUser = contactSrv.getPublicAddressBookIdsOfUser(null);
     if(!publicAddressBookIdsOfUser.isEmpty()){
       SelectOptionGroup publicContacts = new SelectOptionGroup("public-contacts");
       for (String publicCg : publicAddressBookIdsOfUser) {
@@ -138,7 +138,7 @@
       options.add(publicContacts);
     }
     
-    List<String> publicAddressBookIds = contactSrv.getAllsPublicAddressBookIds(username);
+    List<String> publicAddressBookIds = contactSrv.getAllsPublicAddressBookIds(null);
     publicAddressBookIds.removeAll(publicAddressBookIdsOfUser);
     if(!publicAddressBookIds.isEmpty()){
       SelectOptionGroup publicContacts = new SelectOptionGroup("public-groups-contacts");
Index: eXoApplication/contact/webapp/src/main/java/org/exoplatform/contact/ContactUtils.java
===================================================================
--- eXoApplication/contact/webapp/src/main/java/org/exoplatform/contact/ContactUtils.java	(revision 71937)
+++ eXoApplication/contact/webapp/src/main/java/org/exoplatform/contact/ContactUtils.java	(working copy)
@@ -21,26 +21,21 @@
 
 import org.exoplatform.contact.service.Contact;
 import org.exoplatform.contact.service.ContactService;
-import org.exoplatform.contact.service.DataStorage;
-import org.exoplatform.contact.service.impl.JCRDataStorage;
 import org.exoplatform.contact.service.impl.NewUserListener;
-import org.exoplatform.contact.webui.UIAddressBooks;
-import org.exoplatform.contact.webui.UIContacts;
 import org.exoplatform.container.PortalContainer;
 import org.exoplatform.mail.service.Account;
 import org.exoplatform.mail.service.MailService;
 import org.exoplatform.portal.webui.util.Util;
 import org.exoplatform.services.mail.Message;
-import org.exoplatform.services.organization.Group;
 import org.exoplatform.services.organization.OrganizationService;
 import org.exoplatform.services.organization.User;
+import org.exoplatform.services.security.ConversationState;
+import org.exoplatform.services.security.Identity;
 import org.exoplatform.web.application.ApplicationMessage;
 import org.exoplatform.webui.application.WebuiRequestContext;
 import org.exoplatform.webui.core.UIApplication;
 import org.exoplatform.webui.core.UIComponent;
 import org.exoplatform.webui.core.model.SelectItemOption;
-import org.exoplatform.webui.event.Event;
-import org.exoplatform.webui.form.UIForm;
 
 /**
  * Created by The eXo Platform SARL
@@ -119,14 +114,9 @@
   }
   
   public static List<String> getUserGroups() throws Exception {
-    OrganizationService organizationService = 
-      (OrganizationService)PortalContainer.getComponent(OrganizationService.class) ;
-    Object[] objGroupIds = organizationService.getGroupHandler().findGroupsOfUser(getCurrentUser()).toArray() ;
-    List<String> groupIds = new ArrayList<String>() ;
-    for (Object object : objGroupIds) {
-      groupIds.add(((Group)object).getId()) ;
-    }
-    return groupIds ;
+    Identity identity = ConversationState.getCurrent().getIdentity();
+    List<String> groupIds = new ArrayList<String>(identity.getGroups());
+    return groupIds;
   }
   
   public static String getPublicGroupName(String groupId) throws Exception {
