Index: eXoApplication/calendar/service/src/test/java/org/exoplatform/calendar/service/test/TestCalendarService.java
===================================================================
--- eXoApplication/calendar/service/src/test/java/org/exoplatform/calendar/service/test/TestCalendarService.java	(revision 72404)
+++ eXoApplication/calendar/service/src/test/java/org/exoplatform/calendar/service/test/TestCalendarService.java	(working copy)
@@ -455,6 +455,18 @@
     calendarService_.removeCalendarCategory(username, calCategory.getId()) ;
   }
 
+  public void testIsSameDate() {
+    java.util.Calendar cal = Utils.getInstanceTempCalendar();
+    cal.set(java.util.Calendar.HOUR_OF_DAY, 1);
+    Date date1 = cal.getTime();
+    cal.set(java.util.Calendar.HOUR_OF_DAY, 12);
+    Date date2 = cal.getTime();
+    cal.set(java.util.Calendar.HOUR_OF_DAY, 23);
+    cal.set(java.util.Calendar.MINUTE, 25);
+    Date date3 = cal.getTime();
+    assertTrue(Utils.isSameDate(date1, date2));
+    assertTrue(Utils.isSameDate(date2, date3));
+    assertTrue(Utils.isSameDate(date3, date1));
+  }
 
-
 }
\ No newline at end of file
Index: eXoApplication/calendar/service/src/main/java/org/exoplatform/calendar/service/Utils.java
===================================================================
--- eXoApplication/calendar/service/src/main/java/org/exoplatform/calendar/service/Utils.java	(revision 72404)
+++ eXoApplication/calendar/service/src/main/java/org/exoplatform/calendar/service/Utils.java	(working copy)
@@ -18,10 +18,11 @@
 
 import java.util.ArrayList;
 import java.util.Collection;
+import java.util.Date;
 import java.util.GregorianCalendar;
 import java.util.List;
 import java.util.TimeZone;
-
+import java.util.Calendar;
 import org.exoplatform.calendar.service.impl.NewUserListener;
 import org.exoplatform.container.ExoContainerContext;
 import org.exoplatform.container.PortalContainer;
@@ -288,4 +289,21 @@
     return sharedUsers.toArray(new String[sharedUsers.size()]);
   }
   
+  /**
+   * Check two dates are in the same day in GMT time zone  
+   * @param value1
+   * @param value2
+   * @return
+   */
+  public static boolean isSameDate(Date value1, Date value2) {
+    Calendar date1 = getInstanceTempCalendar();
+    date1.setTime(value1);
+    Calendar date2 = getInstanceTempCalendar();
+    date2.setTime(value2);
+    return (date1.get(java.util.Calendar.DATE) == date2.get(java.util.Calendar.DATE) &&
+            date1.get(java.util.Calendar.MONTH) == date2.get(java.util.Calendar.MONTH) &&
+            date1.get(java.util.Calendar.YEAR) == date2.get(java.util.Calendar.YEAR)
+           );
+  }
+  
 }
Index: eXoApplication/calendar/service/src/main/java/org/exoplatform/calendar/service/impl/JCRDataStorage.java
===================================================================
--- eXoApplication/calendar/service/src/main/java/org/exoplatform/calendar/service/impl/JCRDataStorage.java	(revision 72404)
+++ eXoApplication/calendar/service/src/main/java/org/exoplatform/calendar/service/impl/JCRDataStorage.java	(working copy)
@@ -1396,7 +1396,7 @@
    * @see org.exoplatform.calendar.service.impl.DataStorage#syncRemoveEvent(javax.jcr.Node, java.lang.String)
    */
   public void syncRemoveEvent(Node eventFolder, String rootEventId) throws Exception{
-    QueryManager qm = getSession(createSystemProvider()).getWorkspace().getQueryManager();
+    QueryManager qm = eventFolder.getSession().getWorkspace().getQueryManager();
     StringBuffer queryString = new StringBuffer("/jcr:root" + eventFolder.getParent().getParent().getParent().getPath() 
                                                 + "//element(*,exo:calendarPublicEvent)[@exo:rootEventId='").
                                                 append(rootEventId).
@@ -1452,7 +1452,7 @@
    * @see org.exoplatform.calendar.service.impl.DataStorage#getDateFolder(javax.jcr.Node, java.util.Date)
    */
   public Node getDateFolder(Node publicApp, Date date) throws Exception {
-    java.util.Calendar fromCalendar = new GregorianCalendar() ;
+    java.util.Calendar fromCalendar = Utils.getInstanceTempCalendar();
     fromCalendar.setTime(date) ;
     Node yearNode;
     Node monthNode;
@@ -2846,11 +2846,26 @@
   /* (non-Javadoc)
    * @see org.exoplatform.calendar.service.impl.DataStorage#checkFreeBusy(org.exoplatform.calendar.service.EventQuery)
    */
-  /* (non-Javadoc)
-   * @see org.exoplatform.calendar.service.impl.DataStorage#checkFreeBusy(org.exoplatform.calendar.service.EventQuery)
-   */
   public Map<String, String> checkFreeBusy(EventQuery eventQuery) throws Exception {
-    Node eventFolder = getEventFolder(eventQuery.getFromDate().getTime()) ;
+    Date fromDate = eventQuery.getFromDate().getTime();
+    Date toDate = eventQuery.getToDate().getTime();   
+    Map<String, String> participantMap = new HashMap<String, String>();
+    participantMap.putAll(checkFreeBusy(eventQuery, fromDate));
+    if (!Utils.isSameDate(fromDate, toDate)) {
+      Map<String,String> remainingInfo = checkFreeBusy(eventQuery, toDate);
+      if (remainingInfo.size() > 0) {
+        for (String par : remainingInfo.keySet()) {
+          String newValue = remainingInfo.get(par);
+          if (participantMap.containsKey(par)) newValue += Utils.COMMA + participantMap.get(par);
+          participantMap.put(par, newValue);
+        }
+      }
+    }
+    return participantMap;
+  }
+  
+  public Map<String,String> checkFreeBusy(EventQuery eventQuery, Date date) throws Exception {
+    Node eventFolder = getEventFolder(date);
     Map<String, String> participantMap = new HashMap<String, String>() ;
     eventQuery.setCalendarPath(eventFolder.getPath()) ;
     eventQuery.setOrderBy(new String[]{Utils.EXO_FROM_DATE_TIME}) ;
@@ -2868,13 +2883,13 @@
       StringBuilder timeValues = new StringBuilder() ;
       while(it.hasNext()) {
         event = it.nextNode() ;
-        if(event.hasProperty(Utils.EXO_EVENT_STATE) && !CalendarEvent.ST_AVAILABLE.equals(event.getProperty(Utils.EXO_EVENT_STATE).getValue().getString()))
+        if(event.hasProperty(Utils.EXO_EVENT_STATE) && !CalendarEvent.ST_AVAILABLE.equals(event.getProperty(Utils.EXO_EVENT_STATE).getValue().getString())) 
         {
           java.util.Calendar fromCal = event.getProperty(Utils.EXO_FROM_DATE_TIME).getDate() ;
           java.util.Calendar toCal = event.getProperty(Utils.EXO_TO_DATE_TIME).getDate() ;
           if(fromCal.getTimeInMillis() < eventQuery.getFromDate().getTimeInMillis())
             from = String.valueOf(eventQuery.getFromDate().getTimeInMillis()) ;
-          else 
+          else
             from = String.valueOf(fromCal.getTimeInMillis()) ;
           if(toCal.getTimeInMillis() > eventQuery.getToDate().getTimeInMillis()){
             GregorianCalendar cal = new GregorianCalendar() ;
@@ -2882,11 +2897,11 @@
             to = String.valueOf(cal.getTimeInMillis()) ;
           } else to = String.valueOf(toCal.getTimeInMillis()) ;
 
-          if(timeValues != null && timeValues.length() > 0) timeValues.append(",") ;
-          timeValues.append(from).append(",").append(to) ;
+          if (timeValues != null && timeValues.length() > 0) timeValues.append(Utils.COMMA);
+          timeValues.append(from).append(Utils.COMMA).append(to) ;
           participantMap.put(par, timeValues.toString()) ;
         }
-      }    
+      }
     }
     return participantMap ;
   }
Index: eXoApplication/calendar/webapp/src/main/java/org/exoplatform/calendar/webui/popup/UIEventAttenderTab.java
===================================================================
--- eXoApplication/calendar/webapp/src/main/java/org/exoplatform/calendar/webui/popup/UIEventAttenderTab.java	(revision 72404)
+++ eXoApplication/calendar/webapp/src/main/java/org/exoplatform/calendar/webui/popup/UIEventAttenderTab.java	(working copy)
@@ -187,7 +187,7 @@
   public void processRender(WebuiRequestContext arg0) throws Exception {
     super.processRender(arg0);
   }
-  public String getUserTimeZone(String username) throws Exception {
+  public String getUserTimeZone() throws Exception {
     String timeZone = CalendarUtils.getCalendarService().getCalendarSetting(CalendarUtils.getCurrentUser()).getTimeZone() ;
     return CalendarUtils.getTimeZone(timeZone) ;
   }
Index: eXoApplication/calendar/webapp/src/main/webapp/javascript/eXo/calendar/UICalendarPortlet.js
===================================================================
--- eXoApplication/calendar/webapp/src/main/webapp/javascript/eXo/calendar/UICalendarPortlet.js	(revision 72404)
+++ eXoApplication/calendar/webapp/src/main/webapp/javascript/eXo/calendar/UICalendarPortlet.js	(working copy)
@@ -2303,19 +2303,18 @@
  * Sets up checking free/busy
  * @param {Object} container DOM element contains event data
  */
-UICalendarPortlet.prototype.initCheck = function(container){
+UICalendarPortlet.prototype.initCheck = function(container, userSettingTimezoneOffset){
     var DOMUtil = eXo.core.DOMUtil;
     if (typeof(container) == "string") 
         container = eXo.calendar.UICalendarPortlet.getElementById(container);
     var dateAll = DOMUtil.findDescendantsByClass(container, "input", "checkbox")[1];
-    var serverTimezone = parseInt(container.getAttribute("serverTimezone"));
     var table = DOMUtil.findFirstDescendantByClass(container, "table", "UIGrid");
     var tr = DOMUtil.findDescendantsByTagName(table, "tr");
     var firstTr = tr[1];
     this.busyCell = DOMUtil.findDescendantsByTagName(firstTr, "td").slice(1);
     var len = tr.length;
     for (var i = 2; i < len; i++) {
-        this.showBusyTime(tr[i], serverTimezone);
+        this.showBusyTime(tr[i], userSettingTimezoneOffset);
     }
     if (eXo.calendar.UICalendarPortlet.allDayStatus) 
         dateAll.checked = eXo.calendar.UICalendarPortlet.allDayStatus.checked;
@@ -2369,10 +2368,10 @@
  * @param {Object} tr Tr tag contains event data
  * @param {Object} serverTimezone Server timezone
  */
-UICalendarPortlet.prototype.showBusyTime = function(tr, serverTimezone){
+UICalendarPortlet.prototype.showBusyTime = function(tr, userSettingTimezoneOffset){
     var stringTime = tr.getAttribute("busytime");
-    var localize = (tr.getAttribute("usertimezone")) ? parseInt(tr.getAttribute("usertimezone")) : 0;
-    var extraTime = localize - serverTimezone;
+    var browserTimezone = (new Date).getTimezoneOffset();
+    var extraTime = browserTimezone - userSettingTimezoneOffset;
     if (!stringTime) 
         return;
     var time = this.parseTime(stringTime, extraTime);
Index: eXoApplication/calendar/webapp/src/main/webapp/templates/calendar/webui/UIPopup/UIEventAttenderTab.gtmpl
===================================================================
--- eXoApplication/calendar/webapp/src/main/webapp/templates/calendar/webui/UIPopup/UIEventAttenderTab.gtmpl	(revision 72404)
+++ eXoApplication/calendar/webapp/src/main/webapp/templates/calendar/webui/UIPopup/UIEventAttenderTab.gtmpl	(working copy)
@@ -16,9 +16,10 @@
 		return (value % div) ;
 	}
 	def rcontext = _ctx.getRequestContext() ;
-	rcontext.getJavascriptManager().addCustomizedOnLoadScript('eXo.calendar.UICalendarPortlet.initCheck("' + uicomponent.id + '") ;') ;
+	def userSettingTimezoneOffset = uicomponent.getUserTimeZone();
+	rcontext.getJavascriptManager().addCustomizedOnLoadScript('eXo.calendar.UICalendarPortlet.initCheck("' + uicomponent.id + '",' + userSettingTimezoneOffset + ') ;') ;
 %>
-<div class="UIAddNewEvent $uicomponent.id" id="$uicomponent.id" serverTimeZone="<%=uicomponent.getServerTimeZone()%>" >
+<div class="UIAddNewEvent $uicomponent.id" id="$uicomponent.id" >
   <div class="NewEventAttendee">
     <div class="UIFormInputSet">
       <div class="UIFormInputSetWithAction">
@@ -76,7 +77,7 @@
                     <a href="<%=uiForm.event("MovePrevious")%>">
                       <img src="/eXoResources/skin/sharedImages/Blank.gif" class="BackIcon" title="<%=_ctx.appRes('UIDayView.label.previousDay')%>"></a>
                     <span class="Title">
-                      <%=df.format(uicomponent.calendar_.getTime())%>
+                      <%=uicomponent.getDateValue()%>
                     </span><a href="<%=uiForm.event("MoveNext")%>">
                       <img src="/eXoResources/skin/sharedImages/Blank.gif" class="NextIcon" title="<%=_ctx.appRes('UIDayView.label.nextDay')%>"></a>
                   </div>
@@ -131,7 +132,7 @@
               	for(String p in uicomponent.getParticipants()) {
               	  fullname = uicomponent.getFullname(p);
               %>
-              <tr busytime="<%=parMap.get(p);%>" userTimeZone="<%=uicomponent.getUserTimeZone(p)%>">
+              <tr busytime="<%=parMap.get(p);%>">
                 <td>
                   <div class="LeftSide">
                     <div class="Input">
@@ -178,4 +179,4 @@
       </div>
     </div>
   </div>
-</div>
\ No newline at end of file
+</div>
