Index: eXoApplication/chat/service/src/main/java/org/exoplatform/services/uistate/bean/UIStateDataBean.java
===================================================================
--- eXoApplication/chat/service/src/main/java/org/exoplatform/services/uistate/bean/UIStateDataBean.java	(revision 48812)
+++ eXoApplication/chat/service/src/main/java/org/exoplatform/services/uistate/bean/UIStateDataBean.java	(working copy)
@@ -26,6 +26,8 @@
 public class UIStateDataBean {
   private String data;
   
+  private String unreadMessageCnt;
+  
   /**
    * 
    */
@@ -54,4 +56,20 @@
   public String getData() {
     return data;
   }
+  
+  /**
+   * 
+   * @return
+   */
+  public String getUnreadMessageCnt() {
+	return unreadMessageCnt;
+  }
+
+  /**
+   * 
+   * @param unreadMessageCnt
+   */
+  public void setUnreadMessageCnt(String unreadMessageCnt) {
+	this.unreadMessageCnt = unreadMessageCnt;
+  }
 }
Index: eXoApplication/chat/service/src/main/java/org/exoplatform/services/uistate/rest/UIStateService.java
===================================================================
--- eXoApplication/chat/service/src/main/java/org/exoplatform/services/uistate/rest/UIStateService.java	(revision 48812)
+++ eXoApplication/chat/service/src/main/java/org/exoplatform/services/uistate/rest/UIStateService.java	(working copy)
@@ -46,6 +46,8 @@
   
   private static final CacheControl cc;
   
+  private static String unreadMessageCount;
+  
   static {
     cc = new CacheControl();
     cc.setNoCache(true);
@@ -59,10 +61,10 @@
   }
   
   @HTTPMethod(HTTPMethods.POST)
-  @URITemplate("/uistateservice/save/{username}/")
+  @URITemplate("/uistateservice/save/{username}/{unreadMessageCnt}/")
   @InputTransformer(Json2BeanInputTransformer.class)
   @OutputTransformer(Bean2JsonOutputTransformer.class)
-  public Response saveState(@URIParam("username") String userName, UIStateDataBean stateData) throws Exception {
+  public Response saveState(@URIParam("username") String userName,  @URIParam("unreadMessageCnt") String unreadMessageCnt, UIStateDataBean stateData) throws Exception {
     try {
       ExoContainer container = ExoContainerContext.getCurrentContainer();
       XMPPMessenger messenger = (XMPPMessenger) container.getComponentInstanceOfType(XMPPMessenger.class);
@@ -73,7 +75,9 @@
       }
     } catch (Exception e){
     }
+    unreadMessageCount = unreadMessageCnt;
     UIStateDataBean stateDataBean = new UIStateDataBean("null");
+    stateDataBean.setUnreadMessageCnt(unreadMessageCount);
     return Response.Builder.ok(stateDataBean, JSON_CONTENT_TYPE).cacheControl(cc).build();
   }
   
Index: eXoApplication/chat/webapp/src/main/webapp/javascript/eXo/communication/chat/webui/UIChatWindow.js
===================================================================
--- eXoApplication/chat/webapp/src/main/webapp/javascript/eXo/communication/chat/webui/UIChatWindow.js	(revision 48812)
+++ eXoApplication/chat/webapp/src/main/webapp/javascript/eXo/communication/chat/webui/UIChatWindow.js	(working copy)
@@ -470,6 +470,10 @@
   if (this.visible &&
       myParent._isVisible()) {
     tabUnreadMessageNode.innerHTML = '';
+    eXo.communication.chatbar.webui.UIStateManager.unreadMessageCnt = eXo.communication.chatbar.webui.UIStateManager.unreadMessageCnt - this.unreadMessageCnt;
+    myParent.unreadMessageCnt = myParent.unreadMessageCnt - this.unreadMessageCnt;
+    if(eXo.communication.chatbar.webui.UIStateManager.unreadMessageCnt < 0) eXo.communication.chatbar.webui.UIStateManager.unreadMessageCnt = 0;
+    if(myParent.unreadMessageCnt < 0) myParent.unreadMessageCnt = 0;
     this.unreadMessageCnt = 0;
     this.UIMainChatWindow.UISlideAlert.removeMessageByTabId(this.tabId.id);
   } else if (this.unreadMessageCnt > 0) {
@@ -504,6 +508,8 @@
     this.unreadMessageCnt = 0;
   } else {
     this.unreadMessageCnt ++;
+    myParent.unreadMessageCnt++;
+    eXo.communication.chatbar.webui.UIStateManager.unreadMessageCnt++;
   }
   if (msgObj &&
       msgObj.type == 'error') {
@@ -856,6 +862,7 @@
   this.LR_COOKIE_SESSION_START = 'LR_COOKIE_SESSION_START';
   this.MINI_BOX_CHAT_ANIMATION_STEP = 1*1000;
   this.miniBoxChatAnimationId = null;
+  this.unreadMessageCnt  = 0;
   eXo.core.Browser.setCookie(this.LR_COOKIE_SESSION_START, (new Date()).getTime());
 }
 
@@ -1172,18 +1179,25 @@
       this.miniBoxChatAnimationId = null;
       this.blinkMiniBoxChat('NormalMiniBoxChat');
     }
+    if (unreadMessageNode) {
+        if (this.unreadMessageCnt == 0) {
+          unreadMessageNode.innerHTML = ''
+        } else {
+          unreadMessageNode.innerHTML = '*[' + this.unreadMessageCnt + ']&nbsp;';
+        }
+    }
   } else {
     unreadMessageNode = DOMUtil.findFirstDescendantByClass(this.miniBoxChatNode, 'span', 'UnreadMessage');
-    if (unreadMessageCnt > 0 &&
+    if (this.unreadMessageCnt > 0 &&
         !this.miniBoxChatAnimationId) {
       this.miniBoxChatAnimationId = window.setInterval(this.blinkMiniBoxChat, this.MINI_BOX_CHAT_ANIMATION_STEP);
     }
   }
   if (unreadMessageNode) {
-    if (unreadMessageCnt == 0) {
+    if (this.unreadMessageCnt == 0) {
       unreadMessageNode.innerHTML = ''
     } else {
-      unreadMessageNode.innerHTML = '*[' + unreadMessageCnt + ']&nbsp;';
+      unreadMessageNode.innerHTML = '*[' + this.unreadMessageCnt + ']&nbsp;';
     }
   }
   this.reloadScrollMgr();
Index: eXoApplication/chat/webapp/src/main/webapp/javascript/eXo/communication/chat/webui/UIStateManager.js
===================================================================
--- eXoApplication/chat/webapp/src/main/webapp/javascript/eXo/communication/chat/webui/UIStateManager.js	(revision 48812)
+++ eXoApplication/chat/webapp/src/main/webapp/javascript/eXo/communication/chat/webui/UIStateManager.js	(working copy)
@@ -57,6 +57,7 @@
   this.autoCheckId = false;
   this.isPropertiesChanged = false;
   this.data = {};
+  this.unreadMessageCnt = 0;
 }
 
 /**
@@ -140,7 +141,7 @@
     return;
   }
   // Do upload state data to server using url: /chat/messengerservlet/uistateservice/save/{user}/
-  var url = '/chat/messengerservlet/uistateservice/save/' + this.userName;// + '/';
+  var url = '/chat/messengerservlet/uistateservice/save/' + this.userName + '/' + this.unreadMessageCnt;// + '/';
   var handler = new AjaxHandler(this, this.STORE_DATA_AJAX_ACTION);
   if (data) {
     this.ajaxWrapper(handler, url, 'POST', data);
@@ -177,6 +178,15 @@
       break;
     case ajaxHandler.SUCCESS_STATE:
       if (action == this.STORE_DATA_AJAX_ACTION) {
+    	var _data;
+    	if (requestObject.responseText) {
+    	  try {
+    	    _data = eXo.core.JSON.parse(requestObject.responseText);
+    	    eXo.communication.chatbar.webui.UIChatWindow.unreadMessageCnt = _data.unreadMessageCnt;
+    	  } catch (e) {
+    	    window.jsconsole.error('JSON parser exception');
+    	  }
+    	}
         return;
       }
       var _data;
Index: eXoApplication/chatbar/webapp/src/main/webapp/javascript/eXo/communication/chat/webui/UIChatWindow.js
===================================================================
--- eXoApplication/chatbar/webapp/src/main/webapp/javascript/eXo/communication/chat/webui/UIChatWindow.js	(revision 48812)
+++ eXoApplication/chatbar/webapp/src/main/webapp/javascript/eXo/communication/chat/webui/UIChatWindow.js	(working copy)
@@ -466,6 +466,10 @@
   if (this.visible &&
       myParent._isVisible()) {
     tabUnreadMessageNode.innerHTML = '';
+    eXo.communication.chatbar.webui.UIStateManager.unreadMessageCnt = eXo.communication.chatbar.webui.UIStateManager.unreadMessageCnt - this.unreadMessageCnt;
+    myParent.unreadMessageCnt = myParent.unreadMessageCnt - this.unreadMessageCnt;
+    if(eXo.communication.chatbar.webui.UIStateManager.unreadMessageCnt < 0) eXo.communication.chatbar.webui.UIStateManager.unreadMessageCnt = 0;
+    if(myParent.unreadMessageCnt < 0) myParent.unreadMessageCnt = 0;
     this.unreadMessageCnt = 0;
     //this.UIMainChatWindow.UISlideAlert.removeMessageByTabId(this.tabId.id);
   } else if (this.unreadMessageCnt > 0) {
@@ -500,6 +504,8 @@
     this.unreadMessageCnt = 0;
   } else {
     this.unreadMessageCnt ++;
+    myParent.unreadMessageCnt++;
+    eXo.communication.chatbar.webui.UIStateManager.unreadMessageCnt++;
   }
   if (msgObj &&
       msgObj.type == 'error') {
@@ -852,6 +858,7 @@
   this.LR_COOKIE_SESSION_START = 'LR_COOKIE_SESSION_START';
   this.MINI_BOX_CHAT_ANIMATION_STEP = 1*1000;
   this.miniBoxChatAnimationId = null;
+  this.unreadMessageCnt  = 0;
   eXo.core.Browser.setCookie(this.LR_COOKIE_SESSION_START, (new Date()).getTime());
 }
 
@@ -1169,23 +1176,23 @@
       this.blinkMiniBoxChat('NormalMiniBoxChat');
     }
     if (unreadMessageNode) {
-        if (unreadMessageCnt == 0) {
+        if (this.unreadMessageCnt == 0) {
           unreadMessageNode.innerHTML = ''
         } else {
-          unreadMessageNode.innerHTML = '*[' + unreadMessageCnt + ']&nbsp;';
+          unreadMessageNode.innerHTML = '*[' + this.unreadMessageCnt + ']&nbsp;';
         }
       }
   } else {
     unreadMessageNode = DOMUtil.findFirstDescendantByClass(this.miniBoxChatNode, 'span', 'UnreadMessage');
-    if (unreadMessageCnt > 0 &&
+    if (this.unreadMessageCnt > 0 &&
         !this.miniBoxChatAnimationId) {
       this.miniBoxChatAnimationId = window.setInterval(this.blinkMiniBoxChat, this.MINI_BOX_CHAT_ANIMATION_STEP);
     }
     if (unreadMessageNode) {
-        if (unreadMessageCnt == 0) {
+        if (this.unreadMessageCnt == 0) {
           unreadMessageNode.innerHTML = ''
         } else {
-          unreadMessageNode.innerHTML = '' + unreadMessageCnt + '';
+          unreadMessageNode.innerHTML = '' + this.unreadMessageCnt + '';
         }
       }
   }
Index: eXoApplication/chatbar/webapp/src/main/webapp/javascript/eXo/communication/chat/webui/UIStateManager.js
===================================================================
--- eXoApplication/chatbar/webapp/src/main/webapp/javascript/eXo/communication/chat/webui/UIStateManager.js	(revision 48812)
+++ eXoApplication/chatbar/webapp/src/main/webapp/javascript/eXo/communication/chat/webui/UIStateManager.js	(working copy)
@@ -57,6 +57,7 @@
   this.autoCheckId = false;
   this.isPropertiesChanged = false;
   this.data = {};
+  this.unreadMessageCnt = 0;
 }
 
 /**
@@ -140,7 +141,7 @@
     return;
   }
   // Do upload state data to server using url: /chatbar/messengerservlet/uistateservice/save/{user}/
-  var url = '/chatbar/messengerservlet/uistateservice/save/' + this.userName;// + '/';
+  var url = '/chatbar/messengerservlet/uistateservice/save/' + this.userName + '/' + this.unreadMessageCnt;// + '/';
   var handler = new AjaxHandler(this, this.STORE_DATA_AJAX_ACTION);
   if (data) {
     this.ajaxWrapper(handler, url, 'POST', data);
@@ -177,6 +178,15 @@
       break;
     case ajaxHandler.SUCCESS_STATE:
       if (action == this.STORE_DATA_AJAX_ACTION) {
+    	var _data;
+      	if (requestObject.responseText) {
+      	  try {
+      	    _data = eXo.core.JSON.parse(requestObject.responseText);
+      	    eXo.communication.chatbar.webui.UIChatWindow.unreadMessageCnt = _data.unreadMessageCnt;
+      	  } catch (e) {
+      	    window.jsconsole.error('JSON parser exception');
+      	  }
+      	}
         return;
       }
       var _data;
