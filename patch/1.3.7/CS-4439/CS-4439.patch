Index: eXoApplication/chat/webapp/src/main/webapp/javascript/eXo/communication/chat/webui/UIChatWindow.js
===================================================================
--- eXoApplication/chat/webapp/src/main/webapp/javascript/eXo/communication/chat/webui/UIChatWindow.js	(revision 61915)
+++ eXoApplication/chat/webapp/src/main/webapp/javascript/eXo/communication/chat/webui/UIChatWindow.js	(working copy)
@@ -484,6 +484,8 @@
     tabUnreadMessageNode.innerHTML = '*[' + this.unreadMessageCnt + ']&nbsp;';
   }
   myParent.updateUnreadMessage();
+  //fix for CS-4439
+  myParent.updateTabList();
 };
 
 /**
@@ -975,6 +977,43 @@
       thys.focusTab(activeTabId, true);
     }
   }
+  
+  if (visible)
+  {
+    var activeTabControl = thys.getActiveTabControl();
+    if (activeTabControl) {
+      activeTabControl.updateUnreadMessage();
+      var historyStatus = activeTabControl.tabPaneNode.historyStatus;
+      if (!historyStatus) historyStatus = thys.CURRENT_CONVERSATION_MESSAGE;
+      var endDate = new Date();
+      var startDate = new Date(endDate);
+      switch (historyStatus) {
+        case thys.CURRENT_CONVERSATION_MESSAGE:
+          startDate = new Date(activeTabControl.tabPaneNode.startTime);
+          break;
+        case thys.THIS_WEEK_MESSAGE:
+          startDate.setDate(endDate.getDate() - endDate.getDay());
+          break;
+        case thys.LAST_30_DAY_MESSAGE:
+          startDate.setDate(endDate.getDate() - 30);
+          break;
+        case thys.BEGINNING_MESSAGE:
+          startDate = false;
+          break;
+      }
+      if (startDate) {
+        startDate.setHours(0);
+        startDate.setMinutes(0);
+        startDate.setSeconds(0);
+        startDate.setMilliseconds(1);
+        startDate = startDate.getTime();
+        endDate = endDate.getTime();
+      }
+      var targetPerson = activeTabControl.tabId.targetPerson;
+      targetPerson = targetPerson.substr(0, targetPerson.indexOf('@'));
+      thys.UIMainChatWindow.jabberGetMessageHistory(targetPerson, startDate, endDate, activeTabControl.isGroupChat);      
+    }
+  }
   thys.setVisible(visible, null, true);
   thys._isOnLoading = false;
 };
Index: eXoApplication/chatbar/webapp/src/main/webapp/javascript/eXo/communication/chat/webui/UIChatWindow.js
===================================================================
--- eXoApplication/chatbar/webapp/src/main/webapp/javascript/eXo/communication/chat/webui/UIChatWindow.js	(revision 61915)
+++ eXoApplication/chatbar/webapp/src/main/webapp/javascript/eXo/communication/chat/webui/UIChatWindow.js	(working copy)
@@ -480,6 +480,8 @@
     tabUnreadMessageNode.innerHTML = '*[' + this.unreadMessageCnt + ']&nbsp;';
   }
   myParent.updateUnreadMessage();
+  //fix for CS-4439
+  myParent.updateTabList();
 };
 
 /**
@@ -972,6 +974,43 @@
       thys.focusTab(activeTabId, true);
     }
   }
+
+  if (visible) {
+    var activeTabControl = thys.getActiveTabControl();
+    if (activeTabControl) {
+      activeTabControl.updateUnreadMessage();
+      var historyStatus = activeTabControl.tabPaneNode.historyStatus;
+      if (!historyStatus) historyStatus = thys.CURRENT_CONVERSATION_MESSAGE;
+      var endDate = new Date();
+      var startDate = new Date(endDate);
+      switch (historyStatus) {
+        case thys.CURRENT_CONVERSATION_MESSAGE:
+          startDate = new Date(activeTabControl.tabPaneNode.startTime);
+          break;
+        case thys.THIS_WEEK_MESSAGE:
+          startDate.setDate(endDate.getDate() - endDate.getDay());
+          break;
+        case thys.LAST_30_DAY_MESSAGE:
+          startDate.setDate(endDate.getDate() - 30);
+          break;
+        case thys.BEGINNING_MESSAGE:
+          startDate = false;
+          break;
+      }
+      if (startDate) {
+        startDate.setHours(0);
+        startDate.setMinutes(0);
+        startDate.setSeconds(0);
+        startDate.setMilliseconds(1);
+        startDate = startDate.getTime();
+        endDate = endDate.getTime();
+      }
+      var targetPerson = activeTabControl.tabId.targetPerson;
+      targetPerson = targetPerson.substr(0, targetPerson.indexOf('@'));
+      thys.UIMainChatWindow.jabberGetMessageHistory(targetPerson, startDate, endDate, activeTabControl.isGroupChat);      
+    }
+  }	
+  
   thys.setVisible(visible, null, true);
   thys._isOnLoading = false;
   thys.rootNode.style.visibility = "visible";
@@ -1429,7 +1468,7 @@
   if (visible) {
     var activeTabControl = this.getActiveTabControl();
     if (activeTabControl) {
-      activeTabControl.updateUnreadMessage();
+      activeTabControl.updateUnreadMessage();     
     }
     if (this.rootNode.style.display != 'block') {
       this.rootNode.style.display = 'block';
