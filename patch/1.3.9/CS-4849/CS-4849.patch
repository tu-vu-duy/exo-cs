Index: eXoApplication/chat/service/src/main/java/org/exoplatform/services/xmpp/connection/impl/AuthenticationLogoutListener.java
===================================================================
--- eXoApplication/chat/service/src/main/java/org/exoplatform/services/xmpp/connection/impl/AuthenticationLogoutListener.java	(revision 68000)
+++ eXoApplication/chat/service/src/main/java/org/exoplatform/services/xmpp/connection/impl/AuthenticationLogoutListener.java	(working copy)
@@ -26,6 +26,8 @@
 import org.exoplatform.services.security.ConversationRegistry;
 import org.exoplatform.services.security.ConversationState;
 import org.exoplatform.services.xmpp.connection.XMPPSession;
+import org.exoplatform.services.xmpp.util.CometdChannels;
+import org.exoplatform.ws.frameworks.cometd.transport.ContinuationServiceDelegate;
 
 /**
  * Created by The eXo Platform SAS
@@ -50,6 +52,11 @@
         XMPPSession session = messenger.getSession(userId);
         if (session != null) session.removeAllTransport();
         messenger.logout(userId);
+        ContinuationServiceDelegate delegate = (ContinuationServiceDelegate) container.getComponentInstanceOfType(ContinuationServiceDelegate.class);
+        if (delegate != null) {
+          // CS-4849: notify when session has expired
+          delegate.sendMessage(userId, CometdChannels.NOTIFICATION, "session-expired", null);
+        }
       }
      } catch (Exception e){
        if(log.isDebugEnabled())
Index: eXoApplication/chat/service/src/main/java/org/exoplatform/services/xmpp/rest/RESTXMPPService.java
===================================================================
--- eXoApplication/chat/service/src/main/java/org/exoplatform/services/xmpp/rest/RESTXMPPService.java	(revision 68000)
+++ eXoApplication/chat/service/src/main/java/org/exoplatform/services/xmpp/rest/RESTXMPPService.java	(working copy)
@@ -76,6 +76,7 @@
 import org.exoplatform.services.xmpp.history.impl.jcr.HistoryImpl;
 import org.exoplatform.services.xmpp.userinfo.UserInfo;
 import org.exoplatform.services.xmpp.userinfo.UserInfoService;
+import org.exoplatform.services.xmpp.util.CometdChannels;
 import org.exoplatform.services.xmpp.util.PresenceUtil;
 import org.exoplatform.services.xmpp.util.SearchFormFields;
 import org.exoplatform.services.xmpp.util.TransformUtils;
@@ -129,6 +130,8 @@
       put("chat.message.file.event.time.out", "chat_message_file_event_time_out");
       put("chat.message.file.exchange.waiting.for.authorize", "chat_message_file_exchange_waiting_for_authorize");
       put("chat.message.file.exchange.uploading.file.to.server", "chat_message_file_exchange_uploading_file_to_server");
+      put("chat.message.xmpp.session.has.expired", "chat_message_xmpp_session_has_expired");
+      put("chat.information.session.has.expired", "chat_information_session_has_expired");
     }
   };
   
@@ -1939,6 +1942,8 @@
         session.sendMessage(message);
         return Response.Builder.ok().cacheControl(cc).build();
       } else {
+        // CS-4849: notify when session has expired
+        delegate.sendMessage(username, CometdChannels.NOTIFICATION, "session-expired", null);
         return Response.Builder.withStatus(HTTPStatus.BAD_REQUEST)
                                .errorMessage(rb.getString("chat.message.room.xmppsession.null"))
                                .build();
@@ -1964,6 +1969,8 @@
         session.sendMessageToMUC(room, body);
         return Response.Builder.ok().cacheControl(cc).build();
       } else {
+        // CS-4849: notify when session has expired
+        delegate.sendMessage(username, CometdChannels.NOTIFICATION, "session-expired", null);
         return Response.Builder.withStatus(HTTPStatus.INTERNAL_ERROR).build();
       }
     } catch (XMPPException e) {
Index: eXoApplication/chat/service/src/main/java/org/exoplatform/services/xmpp/util/CometdChannels.java
===================================================================
--- eXoApplication/chat/service/src/main/java/org/exoplatform/services/xmpp/util/CometdChannels.java	(revision 68000)
+++ eXoApplication/chat/service/src/main/java/org/exoplatform/services/xmpp/util/CometdChannels.java	(working copy)
@@ -58,4 +58,9 @@
    * 
    */
   public static final String FULLNAME_EXCHANGE = "/eXo/Application/Chat/fullnameExchange";
+  
+  /**
+   * 
+   */
+  public static final String NOTIFICATION = "/eXo/Application/Chat/notification";
 }
Index: eXoApplication/chatbar/webapp/src/main/webapp/javascript/eXo/communication/chat/webui/UIMainChatWindow.js
===================================================================
--- eXoApplication/chatbar/webapp/src/main/webapp/javascript/eXo/communication/chat/webui/UIMainChatWindow.js	(revision 68000)
+++ eXoApplication/chatbar/webapp/src/main/webapp/javascript/eXo/communication/chat/webui/UIMainChatWindow.js	(working copy)
@@ -166,6 +166,7 @@
   this.ResourceBundle = false;
   // The timeout to request resource to avoid portal's session timeout.
   this.PORTAL_SESSION_KEEPER_TIME_STEP = 5*1000*60;
+  this.isExpired = false;
 };
 
 /**
@@ -360,6 +361,8 @@
   Cometd.unsubscribe('/eXo/Application/Chat/FileExchange');
   
   Cometd.unsubscribe('/eXo/Application/Chat/fullnameExchange');
+  
+  Cometd.unsubscribe('/eXo/Application/Chat/notification');
 }
 
 /**
@@ -399,7 +402,10 @@
   Cometd.subscribe('/eXo/Application/Chat/fullnameExchange', function(eventObj) {
     eXo.communication.chatbar.webui.UIMainChatWindow.updateFullNameMap(eventObj);
   });
-  //Add 17/06
+  
+  Cometd.subscribe('/eXo/Application/Chat/notification', function(eventObj) {
+  	eXo.communication.chatbar.webui.UIMainChatWindow.notificationListener(eventObj);
+  });  
 };
 
 /**
@@ -852,6 +858,37 @@
   eXo.communication.chatbar.webui.UIMainChatWindow.processMessages(eventId);
 };
 
+/**
+ * A Cometd listener for notification, i.e: session expiration notification
+ */
+UIMainChatWindow.prototype.notificationListener = function (eventObj) {
+  var msg = eventObj.data;
+  // CS-4849: notify when session has expired
+  if (msg == "session-expired") {
+    this.isExpired = true;
+    if (window.confirm(this.ResourceBundle.chat_message_xmpp_session_has_expired)) location.reload(true);
+    
+    var chatbar = eXo.core.DOMUtil.findFirstDescendantByClass(this.rootNode, 'div', 'TextContent'); 
+    eXo.core.EventManager.addEvent(chatbar, "mouseover", (function(msg) {
+      return function() {
+        if (window.confirm(msg)) location.reload(true);
+      };
+    })(this.ResourceBundle.chat_message_xmpp_session_has_expired));
+    var bottomDecoratorLeft = eXo.core.DOMUtil.findFirstDescendantByClass(this.rootNode.parentNode, 'div', 'BottomDecoratorLeft');  
+    var bottomInformation = eXo.core.DOMUtil.findFirstDescendantByClass(bottomDecoratorLeft, 'div', 'Information');
+    bottomInformation.innerHTML = this.ResourceBundle.chat_information_session_has_expired;
+    
+    var chatwindow = eXo.core.DOMUtil.findFirstDescendantByClass(this.rootNode.parentNode, 'div', 'UIWindow');
+    eXo.core.EventManager.addEvent(chatwindow, "mouseover", function (e) {
+      var current = eXo.core.EventManager.getEventTargetByClass(e, "Actionbar") && eXo.core.EventManager.getEventTargetByClass(e, "TextContent");
+      if (current) {
+        if (window.confirm(eXo.communication.chatbar.webui.UIMainChatWindow.ResourceBundle.chat_message_xmpp_session_has_expired)) location.reload(true);
+      }
+    });
+  }
+};
+
+
 // ---+--
 /**
  * Process message event come from Cometd notification
@@ -1653,6 +1690,10 @@
  * @param {MessageObject} msg struct: {to:'buddy id', body:'message body'}
  */
 UIMainChatWindow.prototype.jabberSendMessage = function(sendTo, msg) {
+  if (this.isExpired) {
+    if (window.confirm(this.ResourceBundle.chat_message_xmpp_session_has_expired)) location.reload(true);
+    return;
+  }
   this.activeAction = this.SEND_MESSAGE_ACTION;
   msg = {to: sendTo, body: msg};
   var msgPackage = eXo.core.JSON.stringify(msg);//'{"to":"' + sendTo + '", "body":"' + msg + '"}';
@@ -1666,6 +1707,10 @@
  * @param {MessageObject} msg struct: {to:'buddy id', body:'message body'}
  */
 UIMainChatWindow.prototype.jabberSendRoomMessage = function(sendTo, msg) {
+  if (this.isExpired) {
+    if (window.confirm(this.ResourceBundle.chat_message_xmpp_session_has_expired)) location.reload(true);
+    return;
+  }
   this.activeAction = this.SEND_MESSAGE_ACTION;
   msg = {to: sendTo, body: msg};
   var msgPackage = eXo.core.JSON.stringify(msg);//'{"to":"' + sendTo + '", "body":"' + msg + '"}';
Index: web/csportal/src/main/webapp/WEB-INF/classes/locale/message/chat/serverMessage.properties
===================================================================
--- web/csportal/src/main/webapp/WEB-INF/classes/locale/message/chat/serverMessage.properties	(revision 68000)
+++ web/csportal/src/main/webapp/WEB-INF/classes/locale/message/chat/serverMessage.properties	(working copy)
@@ -99,4 +99,6 @@
 chat.message.file.transport.response.denied=File exchange: [{0}] denied.
 chat.message.file.event.time.out=The file exchange has been time out and removed by server.
 chat.message.file.exchange.waiting.for.authorize=File exchange: Waiting for authorize...
-chat.message.file.exchange.uploading.file.to.server=File exchange: Uploading file to server...
\ No newline at end of file
+chat.message.file.exchange.uploading.file.to.server=File exchange: Uploading file to server...
+chat.message.xmpp.session.has.expired=Your Chat session has expired. Do you want to redirect to login page?
+chat.information.session.has.expired=Your Chat session has expired.
\ No newline at end of file
Index: web/csportal/src/main/webapp/WEB-INF/classes/locale/message/chat/serverMessage_en.properties
===================================================================
--- web/csportal/src/main/webapp/WEB-INF/classes/locale/message/chat/serverMessage_en.properties	(revision 68000)
+++ web/csportal/src/main/webapp/WEB-INF/classes/locale/message/chat/serverMessage_en.properties	(working copy)
@@ -99,4 +99,6 @@
 chat.message.file.transport.response.denied=File exchange: [{0}] denied.
 chat.message.file.event.time.out=The file exchange has been time out and removed by server.
 chat.message.file.exchange.waiting.for.authorize=File exchange: Waiting for authorize...
-chat.message.file.exchange.uploading.file.to.server=File exchange: Uploading file to server...
\ No newline at end of file
+chat.message.file.exchange.uploading.file.to.server=File exchange: Uploading file to server...
+chat.message.xmpp.session.has.expired=Your Chat session has expired. Do you want to redirect to login page?
+chat.information.session.has.expired=Your Chat session has expired.
\ No newline at end of file
